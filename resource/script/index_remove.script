// index from db sample (async)
new function(){

	importPackage(java.lang) 
	importPackage(java.util.concurrent) 
	importPackage(net.ion.niss.webapp.loaders)
	importPackage(net.ion.framework.db.bean)
	importPackage(java.sql)
	importPackage(net.ion.nsearcher.index)
	
	importPackage(org.apache.lucene.index)
	importPackage(org.apache.lucene.search)
	

	this.handle = function(writer, session, param, rentry, jengine){
		var iid = "myindexer";
		var imanager = rentry.indexManager();
		
		if (! imanager.hasIndex(iid)) {
			writer.append(iid + " not exist");
			return ;
		}
		var indexer = imanager.index(iid).newIndexer() ;
		var rsession = rentry.login() ;

		indexer.index(new IndexJob({
			handle : function(isession) {
				// isession.deleteTerm(new Term("name", "bleujin")) ;
				// isession.deleteAll() ;
				isession.deleteById("change_me") ;
				// isession.deleteQuery(new WildcardQuery(new Term("name", "bleujin*"))) ;
				return null;
			}
		}) ) ;  // end indexer.index

		writer.append('index removed') ;
		return "removed" ;
	}

} ;